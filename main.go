package main

import "fmt"

func main() {
	fmt.Println(problem10(2000000))
}

func problem8() {
	st := `73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450`

	// creating an integer slice with each digit as its member
	new_s := []int{}

	for _, i := range st {
		if i != '\n' {
			new_s = append(new_s, int(i-'0'))
		}
	}
	fmt.Println("len of num: ", len(new_s))
	// now creating a 13 int wide window and sliding it down the array
	// finding product, and comparing with the largest product
	largest_prod := 1
	for start := 0; start < len(new_s)-12; start = start + 1 {
		current_prod := 1
		for e := start; e < start+13; e = e + 1 {
			current_prod = current_prod * new_s[e]
		}
		if current_prod > largest_prod {
			largest_prod = current_prod
		}
	}
	fmt.Println("largest product: ", largest_prod)
}

func problem9() {
	for i := 1; i < 1000; i = i + 1 {
		for j := 1; j < 1000; j = j + 1 {
			k := (1000 - i - j)
			if k < 0 {
				continue
			} else {
				if i*i+j*j == k*k {
					fmt.Println(i, j, k)
				}
			}
		}
	}
}

func problem10(n int) int {
	var prime = func(n int) bool {
		if n == 1 {
			return false
		}
		if n == 2 {
			return true
		}
		for i := 2; i < n; i = i + 1 {
			if n%i == 0 {
				return false
			}
		}
		return true
	}
	sum := 0

	for i := 1; i < n+1; i = i + 1 {
		if prime(i) {
			sum = sum + i
		}
	}
	return sum
}
